# Server configuration
server.port=8080

# PostgreSQL ?????
spring.datasource.postgres.jdbc-url=jdbc:postgresql://localhost:5432/mydb
spring.datasource.postgres.username=admin
spring.datasource.postgres.password=admin123
spring.datasource.postgres.driver-class-name=org.postgresql.Driver
spring.datasource.postgres.hikari.connectionTimeout=20000
spring.datasource.postgres.hikari.maximumPoolSize=5

# MySQL ?????
spring.datasource.mysql.jdbc-url=jdbc:mysql://localhost:3306/mysql_db
spring.datasource.mysql.username=admin
spring.datasource.mysql.password=admin123
spring.datasource.mysql.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.mysql.hikari.connectionTimeout=20000
spring.datasource.mysql.hikari.maximumPoolSize=5

# ??????????
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

# Logging levels
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.example.springDemo=DEBUG

# more Logging configuration
logging.level.com.example.springDemo.aspect=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Application name
spring.application.name=springDemo

# actuator
# eg. http://localhost:8080/actuator/info
management.endpoints.web.exposure.include=*

# OAuth2 GitHub??
spring.security.oauth2.client.registration.github.client-id=Ov23liVmiShFpzQNGgcp
spring.security.oauth2.client.registration.github.client-secret=1c6f2b376957e91f04b56c32409d8f9883fc55fa
# GitHub??????????????????????????
spring.security.oauth2.client.registration.github.scope=read:user,user:email

# SSO??
spring.security.oauth2.client.provider.custom-sso.authorization-uri=https://your-sso-server/oauth2/authorize
spring.security.oauth2.client.provider.custom-sso.token-uri=https://your-sso-server/oauth2/token
spring.security.oauth2.client.provider.custom-sso.user-info-uri=https://your-sso-server/userinfo
spring.security.oauth2.client.provider.custom-sso.user-name-attribute=sub

spring.security.oauth2.client.registration.custom-sso.client-id=your-client-id
spring.security.oauth2.client.registration.custom-sso.client-secret=your-client-secret
spring.security.oauth2.client.registration.custom-sso.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.custom-sso.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.custom-sso.scope=openid,profile,email

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.oauth2=DEBUG